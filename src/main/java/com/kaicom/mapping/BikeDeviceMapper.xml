<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaicom.dao.BikeDeviceMapper">
  <resultMap id="BaseResultMap" type="com.kaicom.model.BikeDevice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="vendor" jdbcType="VARCHAR" property="vendor" />
    <id column="product_id" jdbcType="VARCHAR" property="productId" />
    <id column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="apn" jdbcType="VARCHAR" property="apn" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="port" jdbcType="INTEGER" property="port" />
    <result column="upload_interval" jdbcType="SMALLINT" property="uploadInterval" />
    <result column="lock_can_upload" jdbcType="SMALLINT" property="lockCanUpload" />
    <result column="lock_upload_interval" jdbcType="SMALLINT" property="lockUploadInterval" />
    <result column="gsonser_enable" jdbcType="TINYINT" property="gsonserEnable" />
    <result column="gsonser_wakeup_upload_enable" jdbcType="TINYINT" property="gsonserWakeupUploadEnable" />
    <result column="led" jdbcType="VARCHAR" property="led" />
    <result column="unlock_times" jdbcType="INTEGER" property="unlockTimes" />
    <result column="lock_status" jdbcType="SMALLINT" property="lockStatus" />
    <result column="gsm_version" jdbcType="INTEGER" property="gsmVersion" />
    <result column="bt_version" jdbcType="INTEGER" property="btVersion" />
    <result column="charge_status" jdbcType="TINYINT" property="chargeStatus" />
    <result column="bt_key" jdbcType="VARCHAR" property="btKey" />
    <result column="bt_pwd" jdbcType="VARCHAR" property="btPwd" />
    <result column="province" jdbcType="SMALLINT" property="province" />
    <result column="city" jdbcType="SMALLINT" property="city" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="bt_mac" jdbcType="VARCHAR" property="btMac" />
    <result column="iccid" jdbcType="VARCHAR" property="iccid" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="is_reg" jdbcType="TINYINT" property="isReg" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="lat" jdbcType="DOUBLE" property="lat" />
    <result column="lng" jdbcType="DOUBLE" property="lng" />
    <result column="bat_vol" jdbcType="TINYINT" property="batVol" />
    <result column="config_changed" jdbcType="TINYINT" property="configChanged" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="last_charge" jdbcType="SMALLINT" property="lastCharge" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="group_ids" jdbcType="VARCHAR" property="groupIds" />
    <result column="trans" jdbcType="VARCHAR" property="trans" />
    <result column="receive" jdbcType="VARCHAR" property="receive" />
    <result column="tts" jdbcType="VARCHAR" property="tts" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vendor, product_id, device_id, apn, ip, port, upload_interval, lock_can_upload, 
    lock_upload_interval, gsonser_enable, gsonser_wakeup_upload_enable, led, unlock_times, 
    lock_status, gsm_version, bt_version, charge_status, bt_key, bt_pwd, province, city, 
    type, bt_mac, iccid, reg_time, is_reg, status, upload_time, lat, lng, bat_vol, config_changed, 
    tel, last_charge, group_id, group_ids, trans, receive, tts
  </sql>
  <select id="selectByExample" parameterType="com.kaicom.model.BikeDeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kl_devices
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.kaicom.model.BikeDeviceKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kl_devices
    where id = #{id,jdbcType=INTEGER}
      and vendor = #{vendor,jdbcType=VARCHAR}
      and product_id = #{productId,jdbcType=VARCHAR}
      and device_id = #{deviceId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.kaicom.model.BikeDeviceKey">
    delete from kl_devices
    where id = #{id,jdbcType=INTEGER}
      and vendor = #{vendor,jdbcType=VARCHAR}
      and product_id = #{productId,jdbcType=VARCHAR}
      and device_id = #{deviceId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaicom.model.BikeDeviceExample">
    delete from kl_devices
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaicom.model.BikeDevice">
    insert into kl_devices (id, vendor, product_id, 
      device_id, apn, ip, 
      port, upload_interval, lock_can_upload, 
      lock_upload_interval, gsonser_enable, gsonser_wakeup_upload_enable, 
      led, unlock_times, lock_status, 
      gsm_version, bt_version, charge_status, 
      bt_key, bt_pwd, province, 
      city, type, bt_mac, 
      iccid, reg_time, is_reg, 
      status, upload_time, lat, 
      lng, bat_vol, config_changed, 
      tel, last_charge, group_id, 
      group_ids, trans, receive, 
      tts)
    values (#{id,jdbcType=INTEGER}, #{vendor,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, 
      #{deviceId,jdbcType=VARCHAR}, #{apn,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{port,jdbcType=INTEGER}, #{uploadInterval,jdbcType=SMALLINT}, #{lockCanUpload,jdbcType=SMALLINT}, 
      #{lockUploadInterval,jdbcType=SMALLINT}, #{gsonserEnable,jdbcType=TINYINT}, #{gsonserWakeupUploadEnable,jdbcType=TINYINT}, 
      #{led,jdbcType=VARCHAR}, #{unlockTimes,jdbcType=INTEGER}, #{lockStatus,jdbcType=SMALLINT}, 
      #{gsmVersion,jdbcType=INTEGER}, #{btVersion,jdbcType=INTEGER}, #{chargeStatus,jdbcType=TINYINT}, 
      #{btKey,jdbcType=VARCHAR}, #{btPwd,jdbcType=VARCHAR}, #{province,jdbcType=SMALLINT}, 
      #{city,jdbcType=SMALLINT}, #{type,jdbcType=TINYINT}, #{btMac,jdbcType=VARCHAR}, 
      #{iccid,jdbcType=VARCHAR}, #{regTime,jdbcType=TIMESTAMP}, #{isReg,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{uploadTime,jdbcType=TIMESTAMP}, #{lat,jdbcType=DOUBLE}, 
      #{lng,jdbcType=DOUBLE}, #{batVol,jdbcType=TINYINT}, #{configChanged,jdbcType=TINYINT}, 
      #{tel,jdbcType=VARCHAR}, #{lastCharge,jdbcType=SMALLINT}, #{groupId,jdbcType=INTEGER}, 
      #{groupIds,jdbcType=VARCHAR}, #{trans,jdbcType=VARCHAR}, #{receive,jdbcType=VARCHAR}, 
      #{tts,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kaicom.model.BikeDevice">
    insert into kl_devices
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="vendor != null">
        vendor,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="apn != null">
        apn,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="port != null">
        port,
      </if>
      <if test="uploadInterval != null">
        upload_interval,
      </if>
      <if test="lockCanUpload != null">
        lock_can_upload,
      </if>
      <if test="lockUploadInterval != null">
        lock_upload_interval,
      </if>
      <if test="gsonserEnable != null">
        gsonser_enable,
      </if>
      <if test="gsonserWakeupUploadEnable != null">
        gsonser_wakeup_upload_enable,
      </if>
      <if test="led != null">
        led,
      </if>
      <if test="unlockTimes != null">
        unlock_times,
      </if>
      <if test="lockStatus != null">
        lock_status,
      </if>
      <if test="gsmVersion != null">
        gsm_version,
      </if>
      <if test="btVersion != null">
        bt_version,
      </if>
      <if test="chargeStatus != null">
        charge_status,
      </if>
      <if test="btKey != null">
        bt_key,
      </if>
      <if test="btPwd != null">
        bt_pwd,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="btMac != null">
        bt_mac,
      </if>
      <if test="iccid != null">
        iccid,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="isReg != null">
        is_reg,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="lng != null">
        lng,
      </if>
      <if test="batVol != null">
        bat_vol,
      </if>
      <if test="configChanged != null">
        config_changed,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="lastCharge != null">
        last_charge,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupIds != null">
        group_ids,
      </if>
      <if test="trans != null">
        trans,
      </if>
      <if test="receive != null">
        receive,
      </if>
      <if test="tts != null">
        tts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="vendor != null">
        #{vendor,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="apn != null">
        #{apn,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        #{port,jdbcType=INTEGER},
      </if>
      <if test="uploadInterval != null">
        #{uploadInterval,jdbcType=SMALLINT},
      </if>
      <if test="lockCanUpload != null">
        #{lockCanUpload,jdbcType=SMALLINT},
      </if>
      <if test="lockUploadInterval != null">
        #{lockUploadInterval,jdbcType=SMALLINT},
      </if>
      <if test="gsonserEnable != null">
        #{gsonserEnable,jdbcType=TINYINT},
      </if>
      <if test="gsonserWakeupUploadEnable != null">
        #{gsonserWakeupUploadEnable,jdbcType=TINYINT},
      </if>
      <if test="led != null">
        #{led,jdbcType=VARCHAR},
      </if>
      <if test="unlockTimes != null">
        #{unlockTimes,jdbcType=INTEGER},
      </if>
      <if test="lockStatus != null">
        #{lockStatus,jdbcType=SMALLINT},
      </if>
      <if test="gsmVersion != null">
        #{gsmVersion,jdbcType=INTEGER},
      </if>
      <if test="btVersion != null">
        #{btVersion,jdbcType=INTEGER},
      </if>
      <if test="chargeStatus != null">
        #{chargeStatus,jdbcType=TINYINT},
      </if>
      <if test="btKey != null">
        #{btKey,jdbcType=VARCHAR},
      </if>
      <if test="btPwd != null">
        #{btPwd,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=SMALLINT},
      </if>
      <if test="city != null">
        #{city,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="btMac != null">
        #{btMac,jdbcType=VARCHAR},
      </if>
      <if test="iccid != null">
        #{iccid,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isReg != null">
        #{isReg,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lng != null">
        #{lng,jdbcType=DOUBLE},
      </if>
      <if test="batVol != null">
        #{batVol,jdbcType=TINYINT},
      </if>
      <if test="configChanged != null">
        #{configChanged,jdbcType=TINYINT},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="lastCharge != null">
        #{lastCharge,jdbcType=SMALLINT},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupIds != null">
        #{groupIds,jdbcType=VARCHAR},
      </if>
      <if test="trans != null">
        #{trans,jdbcType=VARCHAR},
      </if>
      <if test="receive != null">
        #{receive,jdbcType=VARCHAR},
      </if>
      <if test="tts != null">
        #{tts,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaicom.model.BikeDeviceExample" resultType="java.lang.Long">
    select count(*) from kl_devices
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kl_devices
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.vendor != null">
        vendor = #{record.vendor,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.apn != null">
        apn = #{record.apn,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null">
        port = #{record.port,jdbcType=INTEGER},
      </if>
      <if test="record.uploadInterval != null">
        upload_interval = #{record.uploadInterval,jdbcType=SMALLINT},
      </if>
      <if test="record.lockCanUpload != null">
        lock_can_upload = #{record.lockCanUpload,jdbcType=SMALLINT},
      </if>
      <if test="record.lockUploadInterval != null">
        lock_upload_interval = #{record.lockUploadInterval,jdbcType=SMALLINT},
      </if>
      <if test="record.gsonserEnable != null">
        gsonser_enable = #{record.gsonserEnable,jdbcType=TINYINT},
      </if>
      <if test="record.gsonserWakeupUploadEnable != null">
        gsonser_wakeup_upload_enable = #{record.gsonserWakeupUploadEnable,jdbcType=TINYINT},
      </if>
      <if test="record.led != null">
        led = #{record.led,jdbcType=VARCHAR},
      </if>
      <if test="record.unlockTimes != null">
        unlock_times = #{record.unlockTimes,jdbcType=INTEGER},
      </if>
      <if test="record.lockStatus != null">
        lock_status = #{record.lockStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.gsmVersion != null">
        gsm_version = #{record.gsmVersion,jdbcType=INTEGER},
      </if>
      <if test="record.btVersion != null">
        bt_version = #{record.btVersion,jdbcType=INTEGER},
      </if>
      <if test="record.chargeStatus != null">
        charge_status = #{record.chargeStatus,jdbcType=TINYINT},
      </if>
      <if test="record.btKey != null">
        bt_key = #{record.btKey,jdbcType=VARCHAR},
      </if>
      <if test="record.btPwd != null">
        bt_pwd = #{record.btPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=SMALLINT},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=SMALLINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.btMac != null">
        bt_mac = #{record.btMac,jdbcType=VARCHAR},
      </if>
      <if test="record.iccid != null">
        iccid = #{record.iccid,jdbcType=VARCHAR},
      </if>
      <if test="record.regTime != null">
        reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isReg != null">
        is_reg = #{record.isReg,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.uploadTime != null">
        upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=DOUBLE},
      </if>
      <if test="record.lng != null">
        lng = #{record.lng,jdbcType=DOUBLE},
      </if>
      <if test="record.batVol != null">
        bat_vol = #{record.batVol,jdbcType=TINYINT},
      </if>
      <if test="record.configChanged != null">
        config_changed = #{record.configChanged,jdbcType=TINYINT},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.lastCharge != null">
        last_charge = #{record.lastCharge,jdbcType=SMALLINT},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.groupIds != null">
        group_ids = #{record.groupIds,jdbcType=VARCHAR},
      </if>
      <if test="record.trans != null">
        trans = #{record.trans,jdbcType=VARCHAR},
      </if>
      <if test="record.receive != null">
        receive = #{record.receive,jdbcType=VARCHAR},
      </if>
      <if test="record.tts != null">
        tts = #{record.tts,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kl_devices
    set id = #{record.id,jdbcType=INTEGER},
      vendor = #{record.vendor,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=VARCHAR},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      apn = #{record.apn,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=INTEGER},
      upload_interval = #{record.uploadInterval,jdbcType=SMALLINT},
      lock_can_upload = #{record.lockCanUpload,jdbcType=SMALLINT},
      lock_upload_interval = #{record.lockUploadInterval,jdbcType=SMALLINT},
      gsonser_enable = #{record.gsonserEnable,jdbcType=TINYINT},
      gsonser_wakeup_upload_enable = #{record.gsonserWakeupUploadEnable,jdbcType=TINYINT},
      led = #{record.led,jdbcType=VARCHAR},
      unlock_times = #{record.unlockTimes,jdbcType=INTEGER},
      lock_status = #{record.lockStatus,jdbcType=SMALLINT},
      gsm_version = #{record.gsmVersion,jdbcType=INTEGER},
      bt_version = #{record.btVersion,jdbcType=INTEGER},
      charge_status = #{record.chargeStatus,jdbcType=TINYINT},
      bt_key = #{record.btKey,jdbcType=VARCHAR},
      bt_pwd = #{record.btPwd,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=SMALLINT},
      city = #{record.city,jdbcType=SMALLINT},
      type = #{record.type,jdbcType=TINYINT},
      bt_mac = #{record.btMac,jdbcType=VARCHAR},
      iccid = #{record.iccid,jdbcType=VARCHAR},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      is_reg = #{record.isReg,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      lat = #{record.lat,jdbcType=DOUBLE},
      lng = #{record.lng,jdbcType=DOUBLE},
      bat_vol = #{record.batVol,jdbcType=TINYINT},
      config_changed = #{record.configChanged,jdbcType=TINYINT},
      tel = #{record.tel,jdbcType=VARCHAR},
      last_charge = #{record.lastCharge,jdbcType=SMALLINT},
      group_id = #{record.groupId,jdbcType=INTEGER},
      group_ids = #{record.groupIds,jdbcType=VARCHAR},
      trans = #{record.trans,jdbcType=VARCHAR},
      receive = #{record.receive,jdbcType=VARCHAR},
      tts = #{record.tts,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaicom.model.BikeDevice">
    update kl_devices
    <set>
      <if test="apn != null">
        apn = #{apn,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="uploadInterval != null">
        upload_interval = #{uploadInterval,jdbcType=SMALLINT},
      </if>
      <if test="lockCanUpload != null">
        lock_can_upload = #{lockCanUpload,jdbcType=SMALLINT},
      </if>
      <if test="lockUploadInterval != null">
        lock_upload_interval = #{lockUploadInterval,jdbcType=SMALLINT},
      </if>
      <if test="gsonserEnable != null">
        gsonser_enable = #{gsonserEnable,jdbcType=TINYINT},
      </if>
      <if test="gsonserWakeupUploadEnable != null">
        gsonser_wakeup_upload_enable = #{gsonserWakeupUploadEnable,jdbcType=TINYINT},
      </if>
      <if test="led != null">
        led = #{led,jdbcType=VARCHAR},
      </if>
      <if test="unlockTimes != null">
        unlock_times = #{unlockTimes,jdbcType=INTEGER},
      </if>
      <if test="lockStatus != null">
        lock_status = #{lockStatus,jdbcType=SMALLINT},
      </if>
      <if test="gsmVersion != null">
        gsm_version = #{gsmVersion,jdbcType=INTEGER},
      </if>
      <if test="btVersion != null">
        bt_version = #{btVersion,jdbcType=INTEGER},
      </if>
      <if test="chargeStatus != null">
        charge_status = #{chargeStatus,jdbcType=TINYINT},
      </if>
      <if test="btKey != null">
        bt_key = #{btKey,jdbcType=VARCHAR},
      </if>
      <if test="btPwd != null">
        bt_pwd = #{btPwd,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=SMALLINT},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="btMac != null">
        bt_mac = #{btMac,jdbcType=VARCHAR},
      </if>
      <if test="iccid != null">
        iccid = #{iccid,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isReg != null">
        is_reg = #{isReg,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lng != null">
        lng = #{lng,jdbcType=DOUBLE},
      </if>
      <if test="batVol != null">
        bat_vol = #{batVol,jdbcType=TINYINT},
      </if>
      <if test="configChanged != null">
        config_changed = #{configChanged,jdbcType=TINYINT},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="lastCharge != null">
        last_charge = #{lastCharge,jdbcType=SMALLINT},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupIds != null">
        group_ids = #{groupIds,jdbcType=VARCHAR},
      </if>
      <if test="trans != null">
        trans = #{trans,jdbcType=VARCHAR},
      </if>
      <if test="receive != null">
        receive = #{receive,jdbcType=VARCHAR},
      </if>
      <if test="tts != null">
        tts = #{tts,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and vendor = #{vendor,jdbcType=VARCHAR}
      and product_id = #{productId,jdbcType=VARCHAR}
      and device_id = #{deviceId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaicom.model.BikeDevice">
    update kl_devices
    set apn = #{apn,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      upload_interval = #{uploadInterval,jdbcType=SMALLINT},
      lock_can_upload = #{lockCanUpload,jdbcType=SMALLINT},
      lock_upload_interval = #{lockUploadInterval,jdbcType=SMALLINT},
      gsonser_enable = #{gsonserEnable,jdbcType=TINYINT},
      gsonser_wakeup_upload_enable = #{gsonserWakeupUploadEnable,jdbcType=TINYINT},
      led = #{led,jdbcType=VARCHAR},
      unlock_times = #{unlockTimes,jdbcType=INTEGER},
      lock_status = #{lockStatus,jdbcType=SMALLINT},
      gsm_version = #{gsmVersion,jdbcType=INTEGER},
      bt_version = #{btVersion,jdbcType=INTEGER},
      charge_status = #{chargeStatus,jdbcType=TINYINT},
      bt_key = #{btKey,jdbcType=VARCHAR},
      bt_pwd = #{btPwd,jdbcType=VARCHAR},
      province = #{province,jdbcType=SMALLINT},
      city = #{city,jdbcType=SMALLINT},
      type = #{type,jdbcType=TINYINT},
      bt_mac = #{btMac,jdbcType=VARCHAR},
      iccid = #{iccid,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      is_reg = #{isReg,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      lat = #{lat,jdbcType=DOUBLE},
      lng = #{lng,jdbcType=DOUBLE},
      bat_vol = #{batVol,jdbcType=TINYINT},
      config_changed = #{configChanged,jdbcType=TINYINT},
      tel = #{tel,jdbcType=VARCHAR},
      last_charge = #{lastCharge,jdbcType=SMALLINT},
      group_id = #{groupId,jdbcType=INTEGER},
      group_ids = #{groupIds,jdbcType=VARCHAR},
      trans = #{trans,jdbcType=VARCHAR},
      receive = #{receive,jdbcType=VARCHAR},
      tts = #{tts,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and vendor = #{vendor,jdbcType=VARCHAR}
      and product_id = #{productId,jdbcType=VARCHAR}
      and device_id = #{deviceId,jdbcType=VARCHAR}
  </update>
</mapper>